dist: bionic         # Ubuntu 18.4 LTS
language: generic    # We want to test on Anaconda, not travis' stock python

# Caching the Python dependencies speeds up builds and lightens
# the load on TravisCI
cache: pip

# Deploy releases to PyPI for pip installs
# See https://docs.travis-ci.com/user/encryption-keys/
deploy:
  provider: pypi
  user: "AxFoundation"
  password:  # The following is encrypted FYI
    secure: kFyJJEetLpOghneLaykUEvjwN9JYE6icAgUn9cwl7uC5zXvtCQNhWDCP1fDbY70kEOkrJ9E6o/dEe8WWwSJyv/7gkzvqmBt/3BOpbDugT+VcZaCqIFd7jcDHyfpd3KOCLCmfpLNt4fI48y3eij+pNf91LKlHJzCC5Qzv5v5XuJXZBx0L19/7viuLGP2WTxkEInKzPaAZrgZh/+yYD0qb1m0a0y9ewUcXv5gEILUUyIREU66JAqd1/3ZRb2rhBgXBLmBfq0FwvfCGLYE2QMel31EOxxUU0oFdLH2DZVpDZzM9OwX8h482Z5m2z5bjVkRldGA09mo7RpDePttjIx1PPncBgLizmY7xTnY8QfKwd0mIcSLimgJffv8S7AbHxMFtcExpLsZrMiOThK3suSTvsrwlGXJ4mR8FD6OATrGYRt9z6CF8f/8zMM3VBb3LbJFlFh7ybG4VLyB88vjZ/e/VZXAWZbZyvNcQUH6SU7fTRsUAI3We5b3D0rjZsH77zaObP4uEq0Aip+j+RulMrHHFvijqb3UP2niBsW8h4iUqYfQWSfLWxbE1WHqjdTAuxHgpEX5ESxHCFUjq71eq5pGp/mJTHD6Lj5e4TgtPuAMDFApB7VHrOksHhqZSgXAe+6pftyRRQQRqX8r838pYRgWGxLuV1vUKMP+CjCIjZlKk/qU=
  on:
    tags: true  # Only upload tags from bumpversion
    condition: $DEPLOY_ME = true

# Unfortunately does not (anymore?) support allow_failure with a build matrix
# specified by include conditions.
# (see https://docs.travis-ci.com/user/customizing-the-build)
# So, for the moment, we test only in the really necessary environments.
jobs:
  include:
    - name: "Python 3.7"
      env: PYTHON=3.7 DEPLOY_ME=true
    - name: "Python 3.7 numbaless (for coverage)"
      env: PYTHON=3.7 NUMBA_DISABLE_JIT=true
    - name: "Python 3.6 (legacy)"
      env: PYTHON=3.6

install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b -p $HOME/miniconda
  - export PATH=$HOME/miniconda/bin:$PATH

  - conda config --set always_yes yes --set changeps1 no
  - conda create -q -n strax python=${PYTHON}
  - source activate strax
  - conda install -c conda-forge python-blosc      # Recommended way to install blosc

  - pip install coveralls
  - python setup.py install

script:
  - coverage run --source=strax setup.py test

# Upload code coverage information
# Only do this if not jitting, otherwise we miss those tests.
after_success:
  - if [ $NUMBA_DISABLE_JIT ]; then coveralls; fi
